pipeline {
    agent any
    parameters {
        string(name: 'BRANCH', defaultValue: 'master', description: 'Branch to build from')
        string(name: 'REPO_URL', defaultValue: 'https://github.com/ityourwayroby/marketvector.git', description: 'Repository URL to build from')
        string(name: 'VERSION', defaultValue: "V00${BUILD_ID}", description: 'Version of Docker image to be built, e.g., V001')
    }

    environment {
        BRANCH = "${params.BRANCH}"
        REPO_URL = "${params.REPO_URL}"
        VERSION = "${params.VERSION}"
        KUBECONFIG = '/home/jenkins/.kube/config'
        ECR_REPO_URL = "905418280053.dkr.ecr.us-east-1.amazonaws.com/eks-repo"
        GIT_CREDENTIALS_ID = 'github_creds' // Ensure this matches your Jenkins credential ID
    }

    stages {
        stage('Clean Workspace') {
            steps {
                cleanWs()
            }
        }

        stage('Clone GitHub Repo') {
            steps {
                git branch: "${BRANCH}", credentialsId: GIT_CREDENTIALS_ID, url: "${REPO_URL}"
            }
        }

        stage('Building Docker Image') {
            steps {
                sh "docker build -t eks-repo ."
            }
        }

        stage('Push To Elastic Container Registry') {
            steps {
                script {
                    sh """
                        aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${ECR_REPO_URL}
                        docker tag eks-repo:latest ${ECR_REPO_URL}:${VERSION}
                        docker push ${ECR_REPO_URL}:${VERSION}
                    """
                }
            }
        }

        stage('Update Kubernetes Deployment') {
            steps {
                script {
                    dir('kubernetes') {
                        sh """
                            echo "Updating deployment.yaml with the new image version"
                            sed -i 's|image:.*|image: ${ECR_REPO_URL}:${VERSION}|g' deployment.yaml
                            cat deployment.yaml # Display the updated file for verification
                        """
                    }
                }
            }
        }

        stage('Deploy To K8S Cluster') {
            steps {
                script {
                    dir('kubernetes') {
                        sh """
                            echo "Deploying to Kubernetes cluster"
                            export KUBECONFIG=${KUBECONFIG}
                            kubectl apply -f .
                        """
                    }
                }
            }
        }
        
        stage('Get K8S Cluster Services') {
            steps {
                script {
                    dir('kubernetes') {
                        sh """
                            echo "Fetching Kubernetes cluster services"
                            export KUBECONFIG=${KUBECONFIG}
                            kubectl get svc --namespace=oxer-app-dev
                        """
                    }
                }
            }
        }
        
        stage('Commit and Push Updated YAML') {
            steps {
                script {
                    
                        sh """
                            git config user.name "Jenkins CI"
                            git config user.email "jenkins@ci.com"

                            git add --all
                            git commit -m "Update deployment.yaml with image version ${VERSION}"
                        """
                        withCredentials([usernamePassword(credentialsId: GIT_CREDENTIALS_ID, passwordVariable: 'GIT_PASSWORD', usernameVariable: 'GIT_USERNAME')]) {
                            sh """
                                git push https://${GIT_USERNAME}:${GIT_PASSWORD}@${REPO_URL.replace("https://", "")} ${BRANCH}
                            """
                        }
                    
                }
            }
        }
    }
}
